" An example for a vimrc file.
"
" Maintainer:	Bram Moolenaar <Bram@vim.org>
" Last change:	2015 Mar 24
"
" To use it, copy it to
"     for Unix and OS/2:  ~/.vimrc
"	      for Amiga:  s:.vimrc
"  for MS-DOS and Win32:  $VIM\_vimrc
"	    for OpenVMS:  sys$login:.vimrc

" When started as "evim", evim.vim will already have done these settings.
if v:progname =~? "evim"
  finish
endif

" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

if has("vms")
  set nobackup		" do not keep a backup file, use versions instead
else
  set backup		" keep a backup file (restore to previous version)
  set undofile		" keep an undo file (undo changes after closing)
endif
set history=50		" keep 50 lines of command line history
set ruler		" show the cursor position all the time
set showcmd		" display incomplete commands
set incsearch		" do incremental searching

" For Win32 GUI: remove 't' flag from 'guioptions': no tearoff menu entries
" let &guioptions = substitute(&guioptions, "t", "", "g")

" Don't use Ex mode, use Q for formatting
map Q gq

" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
inoremap <C-U> <C-G>u<C-U>

" In many terminal emulators the mouse works just fine, thus enable it.
if has('mouse')
  set mouse=a
endif

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
endif

" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent indenting.
  filetype plugin indent on

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78

  " When editing a file, always jump to the last known cursor position.
  " Don't do it when the position is invalid or when inside an event handler
  " (happens when dropping a file on gvim).
  autocmd BufReadPost *
    \ if line("'\"") >= 1 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif

  augroup END

else

  set autoindent		" always set autoindenting on

endif " has("autocmd")

" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
" Only define it when not defined already.
if !exists(":DiffOrig")
  command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis
		  \ | wincmd p | diffthis
endif

if has('langmap') && exists('+langnoremap')
  " Prevent that the langmap option applies to characters that result from a
  " mapping.  If unset (default), this may break plugins (but it's backward
  " compatible).
  set langnoremap
endif



set go=
set gcr=a:blinkon0
colo desert
syntax on
"设置字体颜色，默认字体是白色，我觉得太刺眼，所以改成了灰色。
hi Normal guifg=lightgray ctermbg=Black
"设置无文本区域的背景颜色
hi NonText guibg=grey20 gui=NONE
set fileencodings=utf-8
set encoding=utf-8
set smartindent 
set smarttab
set expandtab
set tabstop=4
set softtabstop=4
set shiftwidth=4
"set guifont
"set guifont=Consolas:h11:cANSI
"set guifontwide=Microsoft_YaHei:h11
set guifontwide=Source\ Han\ Sans\ CN\ 12
set guifont=Bitstream\ Vera\ Sans\ Mono\ 10.5
set nu
set numberwidth=5
set textwidth=0
set lines=35
set columns=85
set linespace=8
set showtabline=1
highlight linenr guifg=#666666
""设置工作路径
cd ~/.vim
"禁止缓存文件
set nobackup
set undodir=~/.vim
""打印时去掉第一行文件名
set printheader=%<%h%m%=page\ %N
"安装vimroom插件
"source D:/program files/vim/vim73/autoload/vimroom.vim
""设置Python语言自动补全
"filetype plugin indent on
"autocmd FileType python set omnifunc=pythoncomplete#Complete
"set omnifunc=pythoncomplete#Complete
"设置Python补全关闭预览窗口
""set completeopt=menu
"让Vim的补全菜单行为与一般IDE一致
set completeopt+=longest
